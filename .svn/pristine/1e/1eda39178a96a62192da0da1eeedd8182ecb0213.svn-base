package model.AM;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import model.AM.common.OtherCharges_AM;


import model.VO.BookingCustomer_VOImpl;
import model.VO.BookingDetail_VOImpl;
import model.VO.Booking_Milestone_VOImpl;
import model.VO.LeaseAgreement_VOImpl;
import model.VO.OcDpHdr_VOImpl;
import model.VO.OcReceiptDp_VOImpl;
import model.VO.OtherChargesHeader_VOImpl;

import model.VO.Receipt_VOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 13 18:27:37 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OtherCharges_AMImpl extends ApplicationModuleImpl implements OtherCharges_AM {
    /**
     * This is the default constructor (do not remove).
     */
    public OtherCharges_AMImpl() {
    }


    public String CreateOtherCharges() {
//        Object Val =
//            ADFContext.getCurrent().getPageFlowScope().get("OfferId") == null ?
//            "" :
//            ADFContext.getCurrent().getPageFlowScope().get("OfferId").toString();
                Row ocHrdRow = this.getOtherChargesHeader_VO1().createRow();
        // bookHrdRow.setAttribute("OfferHdrId", Val);
               this.getOtherChargesHeader_VO1().insertRow(ocHrdRow);
    return "success";
    }


    /**
     * Container's getter for SearchOC_ROVO1.
     * @return SearchOC_ROVO1
     */
    public ViewObjectImpl getSearchOC_ROVO1() {
        return (ViewObjectImpl)findViewObject("SearchOC_ROVO1");
    }


    /**
     * Container's getter for getFunctionCodeROVO1.
     * @return getFunctionCodeROVO1
     */
    public ViewObjectImpl getgetFunctionCodeROVO1() {
        return (ViewObjectImpl)findViewObject("getFunctionCodeROVO1");
    }

    /**
     * Container's getter for OtherChargesHeader_VO1.
     * @return OtherChargesHeader_VO1
     */
    public OtherChargesHeader_VOImpl getOtherChargesHeader_VO1() {
        return (OtherChargesHeader_VOImpl)findViewObject("OtherChargesHeader_VO1");
    }

    /**
     * Container's getter for getApprovalHistoryROVo1.
     * @return getApprovalHistoryROVo1
     */
    public ViewObjectImpl getgetApprovalHistoryROVo1() {
        return (ViewObjectImpl)findViewObject("getApprovalHistoryROVo1");
    }

    /**
     * Container's getter for OtherChargesApproval_Vl1.
     * @return OtherChargesApproval_Vl1
     */
    public ViewLinkImpl getOtherChargesApproval_Vl1() {
        return (ViewLinkImpl)findViewLink("OtherChargesApproval_Vl1");
    }


    /**
     * Container's getter for Receipt_VO1.
     * @return Receipt_VO1
     */
    public Receipt_VOImpl getReceipt_VO1() {
        return (Receipt_VOImpl)findViewObject("Receipt_VO1");
    }

    /**
     * Container's getter for OcReceipt_VL1.
     * @return OcReceipt_VL1
     */
    public ViewLinkImpl getOcReceipt_VL1() {
        return (ViewLinkImpl)findViewLink("OcReceipt_VL1");
    }

    /**
     * Container's getter for BookingCustomer_VO1.
     * @return BookingCustomer_VO1
     */
    public BookingCustomer_VOImpl getBookingCustomer_VO1() {
        return (BookingCustomer_VOImpl)findViewObject("BookingCustomer_VO1");
    }

    /**
     * Container's getter for Booking_Milestone_VO1.
     * @return Booking_Milestone_VO1
     */
    public Booking_Milestone_VOImpl getBooking_Milestone_VO1() {
        return (Booking_Milestone_VOImpl)findViewObject("Booking_Milestone_VO1");
    }

    /**
     * Container's getter for OC_BookingMilestone_VL1.
     * @return OC_BookingMilestone_VL1
     */
    public ViewLinkImpl getOC_BookingMilestone_VL1() {
        return (ViewLinkImpl)findViewLink("OC_BookingMilestone_VL1");
    }

    /**
     * Container's getter for SearchLeaseAgreement_ROVO1.
     * @return SearchLeaseAgreement_ROVO1
     */
    public ViewObjectImpl getSearchLeaseAgreement_ROVO1() {
        return (ViewObjectImpl)findViewObject("SearchLeaseAgreement_ROVO1");
    }

    /**
     * Container's getter for Booking_Milestone_VO2.
     * @return Booking_Milestone_VO2
     */
    public Booking_Milestone_VOImpl getBooking_Milestone_VO2() {
        return (Booking_Milestone_VOImpl)findViewObject("Booking_Milestone_VO2");
    }

    /**
     * Container's getter for OC_BookingMilestone_VL2.
     * @return OC_BookingMilestone_VL2
     */
    public ViewLinkImpl getOC_BookingMilestone_VL2() {
        return (ViewLinkImpl)findViewLink("OC_BookingMilestone_VL2");
    }

    /**
     * Container's getter for Receipt_VO2.
     * @return Receipt_VO2
     */
    public Receipt_VOImpl getReceipt_VO2() {
        return (Receipt_VOImpl)findViewObject("Receipt_VO2");
    }

    /**
     * Container's getter for OcReceipt_VL2.
     * @return OcReceipt_VL2
     */
    public ViewLinkImpl getOcReceipt_VL2() {
        return (ViewLinkImpl)findViewLink("OcReceipt_VL2");
    }

    /**
     * Container's getter for getARSetupDetails_ROVO1.
     * @return getARSetupDetails_ROVO1
     */
    public ViewObjectImpl getgetARSetupDetails_ROVO1() {
        return (ViewObjectImpl)findViewObject("getARSetupDetails_ROVO1");
    }
    
    public String getCodeSegmentCombination(String pBusinessUnitId,
                                            String pChargeType,
                                            String pUnitId) {
        String returnResult = null;
        java.math.BigDecimal businessUnitId =
            new java.math.BigDecimal(pBusinessUnitId);
        Object chargeType = pChargeType;
        java.math.BigDecimal unitId = new java.math.BigDecimal(pUnitId);
        String stmt =
            "begin xxpm_util_package.get_gl_code (?,?,?,?,?,?); end;";
        CallableStatement cst = null;
        try {
            cst = this.getDBTransaction().createCallableStatement(stmt, 0);
            cst.setObject("p_business_unit_id", businessUnitId);
            cst.setObject("p_charge_type_code", chargeType);
            cst.setObject("p_unit_id", unitId);
            cst.registerOutParameter("x_gl_code", Types.VARCHAR);
            cst.registerOutParameter("x_err_code", Types.VARCHAR);
            cst.registerOutParameter("x_err_msg", Types.VARCHAR);
            cst.executeUpdate();
            returnResult = cst.getString("x_err_code");
            return cst.getString("x_gl_code");
        } catch (SQLException e) {
            e.printStackTrace();
            returnResult = e.toString();
            return returnResult;
        } finally {
            if (cst != null) {
                try {
                    cst.close();
                } catch (SQLException e) {
                    returnResult = e.toString();
                    return returnResult;
                }
            }
        }
    }
    
    public String getCashRcptIdRspnse(String pReceiptNo, String pCshRcptId) {
        java.math.BigDecimal cshRcptIdBd = new java.math.BigDecimal(pCshRcptId);
        Object receiptNo = pReceiptNo;
        String stmt =
            "begin xxpm_util_package.update_receipt_attribute1 (?,?); end;";
        CallableStatement cst = null;
        try {
            cst = this.getDBTransaction().createCallableStatement(stmt, 0);
            cst.setObject("p_receipt_number", receiptNo);
            cst.setObject("p_csh_rcpt_id", cshRcptIdBd);
            cst.executeUpdate();
            return "S";
        } catch (SQLException e) {
            System.err.println("ERROR" + e);
            throw new JboException(e.getMessage());
        } finally {
            if (cst != null) {
                try {
                    cst.close();
                } catch (SQLException e) {
                    return "E";
                }
            }
        }
    }

    /**
     * Container's getter for BookingDetail_VO1.
     * @return BookingDetail_VO1
     */
    public ViewObjectImpl getBookingDetail_VO1() {
        return (ViewObjectImpl)findViewObject("BookingDetail_VO1");
    }

    /**
     * Container's getter for getInvoiceInterfacePayloadValuesforOtherCharges1.
     * @return getInvoiceInterfacePayloadValuesforOtherCharges1
     */
    public ViewObjectImpl getgetInvoiceInterfacePayloadValuesforOtherCharges1() {
        return (ViewObjectImpl)findViewObject("getInvoiceInterfacePayloadValuesforOtherCharges1");
    }

    /**
     * Container's getter for getReceiptPayloadDtls_OtherCharges_ROVO1.
     * @return getReceiptPayloadDtls_OtherCharges_ROVO1
     */
    public ViewObjectImpl getgetReceiptPayloadDtls_OtherCharges_ROVO1() {
        return (ViewObjectImpl)findViewObject("getReceiptPayloadDtls_OtherCharges_ROVO1");
    }

    /**
     * Container's getter for getReceiptMethod_ROVO1.
     * @return getReceiptMethod_ROVO1
     */
    public ViewObjectImpl getgetReceiptMethod_ROVO1() {
        return (ViewObjectImpl)findViewObject("getReceiptMethod_ROVO1");
    }

    /**
     * Container's getter for LeaseAgreement_VO1.
     * @return LeaseAgreement_VO1
     */
    public LeaseAgreement_VOImpl getLeaseAgreement_VO1() {
        return (LeaseAgreement_VOImpl)findViewObject("LeaseAgreement_VO1");
    }
    
    public String getARInvoiceTrxDetailsOtherCharge(String pOtherChargeNum,
                                         String pCustomerTrxId,
                                         String pCustomerTrxNo) {
        System.out.println("pOtherChargeNum==impl="+pOtherChargeNum);
        System.out.println("pCustomerTrxId==impl="+pCustomerTrxId);
        System.out.println("pCustomerTrxNo==impl="+pCustomerTrxNo);
        java.math.BigDecimal customerTrxId =
            new java.math.BigDecimal(pCustomerTrxId);
        java.math.BigDecimal customerTrxNo =
            new java.math.BigDecimal(pCustomerTrxNo);
        Object otherChargeNo = pOtherChargeNum;
        String stmt =
            "begin xxpm_util_package.update_customer_trx_id_oc (?,?,?); end;";
        CallableStatement cst = null;
        try {
            cst = this.getDBTransaction().createCallableStatement(stmt, 0);
            cst.setObject("p_other_charge_num", otherChargeNo);
            cst.setObject("p_customer_trx_id", customerTrxId);
            cst.setObject("p_trx_number", customerTrxNo);
            cst.executeUpdate();
            return "S";
        } catch (SQLException e) {
            System.err.println("ERROR" + e);
            throw new JboException(e.getMessage());
        } finally {
            if (cst != null) {
                try {
                    cst.close();
                } catch (SQLException e) {
                    return "E";
                }
            }
        }
    }
    // new response for approval or reject new
                public String forappr(String p_func_id,String p_ref_id,String p_user_grp_id,String p_level_no,
                                                      String p_flow_with_id,String p_reason,String p_apr_rej)
                {
                    String flag="null";
                    CallableStatement cs=this.getDBTransaction().createCallableStatement("{call NEW_APPROVAL_FLOW_PKG.RESPONSE_FOR_APR(?,?,?,?,?,?,?,?,?)}",1);
                    try {
                        cs.setString(1,p_func_id);
                        cs.setString(2,p_ref_id);
                        cs.setString(3,p_user_grp_id);
                        cs.setString(4,p_level_no);
                        cs.setString(5,p_flow_with_id);
                        cs.setString(6,p_reason);
                        cs.setString(7,p_apr_rej);
                        cs.registerOutParameter(8,Types.VARCHAR);
                        cs.registerOutParameter(9,Types.VARCHAR);
                        cs.execute();              
                      flag=cs.getString(9).toString();
                    } catch (SQLException e) {
                    }
                    return flag;
                }
    //submit for approval of OC oc flag N & C
        public String submitOcForAppr(String ocId)
        {
            String flag="null";
            CallableStatement cs=this.getDBTransaction().createCallableStatement("{call NEW_APPROVAL_FLOW_PKG.SUBMIT_FOR_APR_OC(?,?,?)}",1);
            try {
                cs.setString(1,ocId);
                cs.registerOutParameter(2,Types.VARCHAR);
                cs.registerOutParameter(3,Types.VARCHAR);
                cs.execute();
           
              flag=cs.getString(3).toString();
            } catch (SQLException e) {
            }
            return flag;
        }
    //Respose of approval of OC oc flag N & C
        public String responseOcForAppr(String ocId,String reason,String apr_rej)
        {
            String flag="null";
            CallableStatement cs=this.getDBTransaction().createCallableStatement("{call NEW_APPROVAL_FLOW_PKG.RESPONSE_FOR_APR_OC(?,?,?,?,?)}",1);
            try {
                cs.setString(1,ocId);
                cs.setString(2,reason);
                cs.setString(3,apr_rej);
                cs.registerOutParameter(4,Types.VARCHAR);
                cs.registerOutParameter(5,Types.VARCHAR);
                cs.execute();
           
              flag=cs.getString(5).toString();
            } catch (SQLException e) {
            }
            return flag;
        }
        
    //submit for approval of OC oc flag DP
        public String submitOcForApprDP(String ocId)
        {
            String flag="null";
            CallableStatement cs=this.getDBTransaction().createCallableStatement("{call NEW_APPROVAL_FLOW_PKG.SUBMIT_FOR_APR_OC_DP(?,?,?)}",1);
            try {
                cs.setString(1,ocId);
                cs.registerOutParameter(2,Types.VARCHAR);
                cs.registerOutParameter(3,Types.VARCHAR);
                cs.execute();
           
              flag=cs.getString(3).toString();
            } catch (SQLException e) {
            }
            return flag;
        }
    //Respose of approval of OC oc flag DP
        public String responseOcForApprDP(String ocId,String reason,String apr_rej)
        {
            String flag="null";
            CallableStatement cs=this.getDBTransaction().createCallableStatement("{call NEW_APPROVAL_FLOW_PKG.RESPONSE_FOR_APR_OC_DP(?,?,?,?,?)}",1);
            try {
                cs.setString(1,ocId);
                cs.setString(2,reason);
                cs.setString(3,apr_rej);
                cs.registerOutParameter(4,Types.VARCHAR);
                cs.registerOutParameter(5,Types.VARCHAR);
                cs.execute();
           
              flag=cs.getString(5).toString();
            } catch (SQLException e) {
            }
            return flag;
        }
    //To change transaction date
        public String chngTnxDate(String ocId,String dateTnx)
        {
            String flag="null";
            CallableStatement cs=this.getDBTransaction().createCallableStatement("{call XXPM_OC_PKG.CHNG_TNX_DATE(?,?,?,?)}",1);
            try {
                cs.setString(1,ocId);
                cs.setString(2,dateTnx);
                cs.registerOutParameter(3,Types.VARCHAR);
                cs.registerOutParameter(4,Types.VARCHAR);
                cs.execute();
           
              flag=cs.getString(4).toString();
            } catch (SQLException e) {
            }
            return flag;
        }
    /**
     * Container's getter for Booking_Milestone_VO3.
     * @return Booking_Milestone_VO3
     */
    public Booking_Milestone_VOImpl getBooking_Milestone_VO3() {
        return (Booking_Milestone_VOImpl)findViewObject("Booking_Milestone_VO3");
    }

    /**
     * Container's getter for OC_BookingMilestoneForAppr_VL1.
     * @return OC_BookingMilestoneForAppr_VL1
     */
    public ViewLinkImpl getOC_BookingMilestoneForAppr_VL1() {
        return (ViewLinkImpl)findViewLink("OC_BookingMilestoneForAppr_VL1");
    }

    /**
     * Container's getter for Receipt_VO3.
     * @return Receipt_VO3
     */
    public Receipt_VOImpl getReceipt_VO3() {
        return (Receipt_VOImpl)findViewObject("Receipt_VO3");
    }

    /**
     * Container's getter for OC_ReceiptForAppr_VL1.
     * @return OC_ReceiptForAppr_VL1
     */
    public ViewLinkImpl getOC_ReceiptForAppr_VL1() {
        return (ViewLinkImpl)findViewLink("OC_ReceiptForAppr_VL1");
    }

    /**
     * Container's getter for Booking_Milestone_VO4.
     * @return Booking_Milestone_VO4
     */
    public Booking_Milestone_VOImpl getBooking_Milestone_VO4() {
        return (Booking_Milestone_VOImpl)findViewObject("Booking_Milestone_VO4");
    }

    /**
     * Container's getter for OC_BookingMstone_CancelId_VL1.
     * @return OC_BookingMstone_CancelId_VL1
     */
    public ViewLinkImpl getOC_BookingMstone_CancelId_VL1() {
        return (ViewLinkImpl)findViewLink("OC_BookingMstone_CancelId_VL1");
    }

    /**
     * Container's getter for Receipt_VO4.
     * @return Receipt_VO4
     */
    public Receipt_VOImpl getReceipt_VO4() {
        return (Receipt_VOImpl)findViewObject("Receipt_VO4");
    }

    /**
     * Container's getter for OC_Receipt_CancelId_VL1.
     * @return OC_Receipt_CancelId_VL1
     */
    public ViewLinkImpl getOC_Receipt_CancelId_VL1() {
        return (ViewLinkImpl)findViewLink("OC_Receipt_CancelId_VL1");
    }

    /**
     * Container's getter for BookingMilestoneOC_Hstry1.
     * @return BookingMilestoneOC_Hstry1
     */
    public ViewObjectImpl getBookingMilestoneOC_Hstry1() {
        return (ViewObjectImpl)findViewObject("BookingMilestoneOC_Hstry1");
    }

    /**
     * Container's getter for OcHeader_BookingMilestoneOC_Hstry_VL1.
     * @return OcHeader_BookingMilestoneOC_Hstry_VL1
     */
    public ViewLinkImpl getOcHeader_BookingMilestoneOC_Hstry_VL1() {
        return (ViewLinkImpl)findViewLink("OcHeader_BookingMilestoneOC_Hstry_VL1");
    }

    /**
     * Container's getter for Receipt_VO5.
     * @return Receipt_VO5
     */
    public Receipt_VOImpl getReceipt_VO5() {
        return (Receipt_VOImpl)findViewObject("Receipt_VO5");
    }

    /**
     * Container's getter for ReceiptDtlVO1.
     * @return ReceiptDtlVO1
     */
    public ViewObjectImpl getReceiptDtlVO1() {
        return (ViewObjectImpl)findViewObject("ReceiptDtlVO1");
    }

    /**
     * Container's getter for ReceiptHdr_Dtl_VL1.
     * @return ReceiptHdr_Dtl_VL1
     */
    public ViewLinkImpl getReceiptHdr_Dtl_VL1() {
        return (ViewLinkImpl)findViewLink("ReceiptHdr_Dtl_VL1");
    }

    /**
     * Container's getter for getBookingMsDtlForOC_RoVo1.
     * @return getBookingMsDtlForOC_RoVo1
     */
    public ViewObjectImpl getgetBookingMsDtlForOC_RoVo1() {
        return (ViewObjectImpl)findViewObject("getBookingMsDtlForOC_RoVo1");
    }

    /**
     * Container's getter for Receipt_VO6.
     * @return Receipt_VO6
     */
    public Receipt_VOImpl getReceipt_VO6() {
        return (Receipt_VOImpl)findViewObject("Receipt_VO6");
    }

    /**
     * Container's getter for OC_ReceiptForAppr_VL2.
     * @return OC_ReceiptForAppr_VL2
     */
    public ViewLinkImpl getOC_ReceiptForAppr_VL2() {
        return (ViewLinkImpl)findViewLink("OC_ReceiptForAppr_VL2");
    }

    /**
     * Container's getter for SearchOcDp_RoVo1.
     * @return SearchOcDp_RoVo1
     */
    public ViewObjectImpl getSearchOcDp_RoVo1() {
        return (ViewObjectImpl)findViewObject("SearchOcDp_RoVo1");
    }

    /**
     * Container's getter for OcDpHdr_VO1.
     * @return OcDpHdr_VO1
     */
    public ViewObjectImpl getOcDpHdr_VO1() {
        return (ViewObjectImpl)findViewObject("OcDpHdr_VO1");
    }

    /**
     * Container's getter for OcBkMilestoneDtlDp_VO1.
     * @return OcBkMilestoneDtlDp_VO1
     */
    public ViewObjectImpl getOcBkMilestoneDtlDp_VO1() {
        return (ViewObjectImpl)findViewObject("OcBkMilestoneDtlDp_VO1");
    }

    /**
     * Container's getter for OcHdrDpVo_OcBkMilestoneDtlDpVo_VL1.
     * @return OcHdrDpVo_OcBkMilestoneDtlDpVo_VL1
     */
    public ViewLinkImpl getOcHdrDpVo_OcBkMilestoneDtlDpVo_VL1() {
        return (ViewLinkImpl)findViewLink("OcHdrDpVo_OcBkMilestoneDtlDpVo_VL1");
    }

    /**
     * Container's getter for OcReceiptDp_VO1.
     * @return OcReceiptDp_VO1
     */
    public ViewObjectImpl getOcReceiptDp_VO1() {
        return (ViewObjectImpl)findViewObject("OcReceiptDp_VO1");
    }

    /**
     * Container's getter for OcHdrDpVo_OcReceiptDpVo_VL1.
     * @return OcHdrDpVo_OcReceiptDpVo_VL1
     */
    public ViewLinkImpl getOcHdrDpVo_OcReceiptDpVo_VL1() {
        return (ViewLinkImpl)findViewLink("OcHdrDpVo_OcReceiptDpVo_VL1");
    }

    /**
     * Container's getter for Lookup_View_ROVO1.
     * @return Lookup_View_ROVO1
     */
    public ViewObjectImpl getLookup_View_ROVO1() {
        return (ViewObjectImpl)findViewObject("Lookup_View_ROVO1");
    }

    /**
     * Container's getter for getOcDpBkMsDtlInvoiceLines_RoVo1.
     * @return getOcDpBkMsDtlInvoiceLines_RoVo1
     */
    public ViewObjectImpl getgetOcDpBkMsDtlInvoiceLines_RoVo1() {
        return (ViewObjectImpl)findViewObject("getOcDpBkMsDtlInvoiceLines_RoVo1");
    }

    /**
     * Container's getter for getApprovalHistoryROVo2.
     * @return getApprovalHistoryROVo2
     */
    public ViewObjectImpl getgetApprovalHistoryROVo2() {
        return (ViewObjectImpl)findViewObject("getApprovalHistoryROVo2");
    }

    /**
     * Container's getter for OcDpHdrVoGetAprvlRoVo_VL1.
     * @return OcDpHdrVoGetAprvlRoVo_VL1
     */
    public ViewLinkImpl getOcDpHdrVoGetAprvlRoVo_VL1() {
        return (ViewLinkImpl)findViewLink("OcDpHdrVoGetAprvlRoVo_VL1");
    }
}
