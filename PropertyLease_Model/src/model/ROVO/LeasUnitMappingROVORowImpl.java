package model.ROVO;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 09 17:41:37 IST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LeasUnitMappingROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        LeaseAgreementId {
            public Object get(LeasUnitMappingROVORowImpl obj) {
                return obj.getLeaseAgreementId();
            }

            public void put(LeasUnitMappingROVORowImpl obj, Object value) {
                obj.setLeaseAgreementId((BigDecimal)value);
            }
        }
        ,
        LeaseNumber {
            public Object get(LeasUnitMappingROVORowImpl obj) {
                return obj.getLeaseNumber();
            }

            public void put(LeasUnitMappingROVORowImpl obj, Object value) {
                obj.setLeaseNumber((String)value);
            }
        }
        ,
        BookingId {
            public Object get(LeasUnitMappingROVORowImpl obj) {
                return obj.getBookingId();
            }

            public void put(LeasUnitMappingROVORowImpl obj, Object value) {
                obj.setBookingId((BigDecimal)value);
            }
        }
        ,
        UnitId {
            public Object get(LeasUnitMappingROVORowImpl obj) {
                return obj.getUnitId();
            }

            public void put(LeasUnitMappingROVORowImpl obj, Object value) {
                obj.setUnitId((BigDecimal)value);
            }
        }
        ,
        UnitName {
            public Object get(LeasUnitMappingROVORowImpl obj) {
                return obj.getUnitName();
            }

            public void put(LeasUnitMappingROVORowImpl obj, Object value) {
                obj.setUnitName((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LeasUnitMappingROVORowImpl object);

        public abstract void put(LeasUnitMappingROVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int LEASEAGREEMENTID = AttributesEnum.LeaseAgreementId.index();
    public static final int LEASENUMBER = AttributesEnum.LeaseNumber.index();
    public static final int BOOKINGID = AttributesEnum.BookingId.index();
    public static final int UNITID = AttributesEnum.UnitId.index();
    public static final int UNITNAME = AttributesEnum.UnitName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LeasUnitMappingROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute LeaseAgreementId.
     * @return the LeaseAgreementId
     */
    public BigDecimal getLeaseAgreementId() {
        return (BigDecimal) getAttributeInternal(LEASEAGREEMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LeaseAgreementId.
     * @param value value to set the  LeaseAgreementId
     */
    public void setLeaseAgreementId(BigDecimal value) {
        setAttributeInternal(LEASEAGREEMENTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LeaseNumber.
     * @return the LeaseNumber
     */
    public String getLeaseNumber() {
        return (String) getAttributeInternal(LEASENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LeaseNumber.
     * @param value value to set the  LeaseNumber
     */
    public void setLeaseNumber(String value) {
        setAttributeInternal(LEASENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BookingId.
     * @return the BookingId
     */
    public BigDecimal getBookingId() {
        return (BigDecimal) getAttributeInternal(BOOKINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BookingId.
     * @param value value to set the  BookingId
     */
    public void setBookingId(BigDecimal value) {
        setAttributeInternal(BOOKINGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitId.
     * @return the UnitId
     */
    public BigDecimal getUnitId() {
        return (BigDecimal) getAttributeInternal(UNITID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitId.
     * @param value value to set the  UnitId
     */
    public void setUnitId(BigDecimal value) {
        setAttributeInternal(UNITID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitName.
     * @return the UnitName
     */
    public String getUnitName() {
        return (String) getAttributeInternal(UNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitName.
     * @param value value to set the  UnitName
     */
    public void setUnitName(String value) {
        setAttributeInternal(UNITNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
