package model.AM;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;


import model.AM.common.LandLordMaster_AM;

import model.VO.LandLordUnitDtls_VOImpl;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 21 11:27:31 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LandLordMaster_AMImpl extends ApplicationModuleImpl implements LandLordMaster_AM {
    /**
     * This is the default constructor (do not remove).
     */
    public LandLordMaster_AMImpl() {
    }

    /**
     * Container's getter for LandLordMaster_VO1.
     * @return LandLordMaster_VO1
     */
    public ViewObjectImpl getLandLordMaster_VO1() {
        return (ViewObjectImpl)findViewObject("LandLordMaster_VO1");
    }

    /**
     * Container's getter for LandLordUnitDtls_VO1.
     * @return LandLordUnitDtls_VO1
     */
    public LandLordUnitDtls_VOImpl getLandLordUnitDtls_VO1() {
        return (LandLordUnitDtls_VOImpl)findViewObject("LandLordUnitDtls_VO1");
    }

    /**
     * Container's getter for LandLordAprvlFlow_VO1.
     * @return LandLordAprvlFlow_VO1
     */
    public ViewObjectImpl getLandLordAprvlFlow_VO1() {
        return (ViewObjectImpl)findViewObject("LandLordAprvlFlow_VO1");
    }

    /**
     * Container's getter for SearchLandLordMaster_RoVo1.
     * @return SearchLandLordMaster_RoVo1
     */
    public ViewObjectImpl getSearchLandLordMaster_RoVo1() {
        return (ViewObjectImpl)findViewObject("SearchLandLordMaster_RoVo1");
    }

    /**
     * Container's getter for PropertyManagement_VO1.
     * @return PropertyManagement_VO1
     */
    public ViewObjectImpl getPropertyManagement_VO1() {
        return (ViewObjectImpl)findViewObject("PropertyManagement_VO1");
    }

    /**
     * Container's getter for LandLordMstr_UnitDtls_VL1.
     * @return LandLordMstr_UnitDtls_VL1
     */
    public ViewLinkImpl getLandLordMstr_UnitDtls_VL1() {
        return (ViewLinkImpl)findViewLink("LandLordMstr_UnitDtls_VL1");
    }

    /**
     * Container's getter for LandLordMstr_AprvlFlow_VL1.
     * @return LandLordMstr_AprvlFlow_VL1
     */
    public ViewLinkImpl getLandLordMstr_AprvlFlow_VL1() {
        return (ViewLinkImpl)findViewLink("LandLordMstr_AprvlFlow_VL1");
    }
    //change all pending approver at a shot
        public String changeAllPendingApprover(String landlordTnxId,String seq,String aprvlFlowId,String approverId,String updaterName)
        {
            String flag="null";
            CallableStatement cs=this.getDBTransaction().createCallableStatement("{call NEW_APPROVAL_FLOW_PKG.CHANGE_PENDING_APPROVER(?,?,?,?,?,?,?)}",1);
            try {
                cs.setString(1,landlordTnxId);
                cs.setString(2,seq);
                cs.setString(3,aprvlFlowId);
                cs.setString(4,approverId);
                cs.setString(5,updaterName);
                cs.registerOutParameter(6,Types.VARCHAR);
                cs.registerOutParameter(7,Types.VARCHAR);
                cs.execute();
           
              flag=cs.getString(7).toString();
            } catch (SQLException e) {
            }
            return flag;
        }

    /**
     * Container's getter for GetLandlordApprFlwDtls_RoVo1.
     * @return GetLandlordApprFlwDtls_RoVo1
     */
    public ViewObjectImpl getGetLandlordApprFlwDtls_RoVo1() {
        return (ViewObjectImpl)findViewObject("GetLandlordApprFlwDtls_RoVo1");
    }
}
